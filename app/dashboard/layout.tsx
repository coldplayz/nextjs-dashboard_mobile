// import { redirect } from "next/navigation";

import { Toaster } from "@/components/ui/sonner"
import NavBar from "@/components/NavBar";
import Footer from "@/components/Footer";
import "@/app/ui/global.css";
import { inter } from "@/app/ui/fonts";
import BreadCrumbs from "@/components/BreadCrumbs";
import Sidebar from "@/components/Sidebar";
import PendingIcon from "@/components/PendingIcon";
import CompletedIcon from "@/components/CompletedIcon";
import LogoImage from "@/components/LogoImage";
import { ClientRoutes } from "@/app.config";
// import { getMe } from "@/lib/apis/backend/get-me";
// import { ClientRoutes } from "@/app.config";
import { TasksProvider } from "@/lib/providers/TasksProvider";
import { signoutUser, getTasks } from "@/lib/actions";

// TODO:
// - add metadata

export const metadata = {
  title: 'Web Tasks',
  description: 'Generated by Greenbel using Next.js',
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  // const me = await getMe();

  // if (!me) redirect(ClientRoutes.signin);

  // console.log(me); // SCAFF
  const res = await getTasks();
  if (res.status === 401) return await signoutUser();

  const tasksData: any[] = (await res.json()).data;
  const tasks = tasksData || [];
  // const pendingTasks = tasks.filter((task) => !task.done);
  // const completedTasks = tasks.filter((task) => task.done);

  const navItems = [
    {
      label: 'Pending',
      href: ClientRoutes.dashboard.pendingTasks,
      Icon: PendingIcon,
    },
    {
      label: 'Completed',
      href: ClientRoutes.dashboard.completedTasks,
      Icon: CompletedIcon,
    },
  ];

  const brand = {
    Icon: LogoImage,
  };

  return (
    <html lang="en">
      <body className={`grid min-h-screen grid-rows-12 ${inter.className} antialiased bg-gray-100`}>

        {/* Header */}
        <div className="">
          <NavBar>
            <Sidebar navItems={navItems} brand={brand} />
          </NavBar>
        </div>

        <TasksProvider currTasks={tasks}>
          <div className="p-5 row-span-10">
            <div className="space-y-5">
              <BreadCrumbs />
              <main>
                {children}
              </main>
            </div>
          </div>
        </TasksProvider>

        <Footer />
        <Toaster richColors expand position="top-center" />
      </body>
    </html>
  )
}
